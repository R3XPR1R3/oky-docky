#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å API
"""

import requests
import json

def test_debug_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π endpoint"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã...")
    
    try:
        response = requests.get("http://localhost:8000/api/debug/form_data_test")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –û—Ç–ª–∞–¥–æ—á–Ω—ã–π endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            templates = data.get('available_templates', [])
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {len(templates)}")
            
            for template in templates:
                print(f"  - ID: {template['id']}")
                print(f"    –ò–º—è: {template['name']}")
                print(f"    –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è: {template['original_filename']}")
                print(f"    PDF —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {template['pdf_exists']}")
                print(f"    –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {template['variables']}")
                print("")
            
            return templates
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(response.text)
            return []
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return []

def test_placeholder_debug(template_name):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–∫—É –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤"""
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –¥–ª—è: {template_name}")
    
    try:
        response = requests.get(f"http://localhost:8000/api/debug/placeholder_test/{template_name}")
        
        if response.status_code == 200:
            data = response.json()
            
            if data.get('success'):
                debug_info = data.get('debug_info', {})
                print("‚úÖ –û—Ç–ª–∞–¥–∫–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"üìù –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {debug_info.get('raw_text_length', 0)}")
                print(f"üî§ –ü—Ä–µ–≤—å—é —Ç–µ–∫—Å—Ç–∞: {debug_info.get('raw_text_preview', '')[:100]}...")
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤: {debug_info.get('placeholders_found', 0)}")
                
                placeholders = debug_info.get('placeholders_detail', {})
                for name, info in placeholders.items():
                    print(f"  - {{{name}}} –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è {info['count']} —Ä–∞–∑")
                
                form_fields = debug_info.get('generated_form_fields', [])
                print(f"üìù –ü–æ–ª—è —Ñ–æ—Ä–º—ã: {len(form_fields)}")
                for field in form_fields:
                    print(f"  - {field['label']} ({field['type']})")
                
                return True
            else:
                print("‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(response.text)
            return False
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_generation(template_name):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    print(f"üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–ª—è: {template_name}")
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        'name': '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        'test': '—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ',
        'data': '2025-08-07'
    }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º FormData –∫–∞–∫ –¥–µ–ª–∞–µ—Ç frontend
    form_data = {
        'format_type': 'pdf',
        'field_data': json.dumps(test_data)
    }
    
    try:
        response = requests.post(
            f"http://localhost:8000/api/generate/{template_name}",
            data=form_data
        )
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
                print(f"üìÑ –§–∞–π–ª: {data.get('output_file')}")
                print(f"üîó URL: {data.get('download_url')}")
                return True
            else:
                print("‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
                print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            try:
                error_data = response.json()
                print(f"üí¨ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_data}")
            except:
                print(f"üí¨ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {response.text}")
            return False
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def main():
    print("üöÄ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê OKY DOCKY API")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
    templates = test_debug_endpoint()
    
    if not templates:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    # 2. –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_template = templates[0]
    template_name = test_template['name']
    
    print(f"\nüéØ –í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {template_name}")
    print("=" * 50)
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–∫—É –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
    placeholder_ok = test_placeholder_debug(template_name)
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    if placeholder_ok:
        print(f"\nüîÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–ï–ù–ï–†–ê–¶–ò–ò")
        print("=" * 30)
        generation_ok = test_generation(template_name)
        
        if generation_ok:
            print("\nüéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢! –ü–æ–ø—Ä–æ–±—É–π –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
            print(f"http://localhost:8000")
        else:
            print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞.")
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤. –ü—Ä–æ–≤–µ—Ä—å PDF —Ñ–∞–π–ª.")

if __name__ == "__main__":
    main()